<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="attached"       default="true"/>
  <!-- ================================================================================= -->
  <!-- <arg name="hand_name"             default="hithand"/> -->
  <arg name="hand_name"             default="robotiq3f"/>
  <arg name="control_rate"          default="100"/>
  <arg name="robot_name"            default="panda"/>
  <arg name="joint_state_topic"     default="/robotiq3f/joint_states"/>
  <arg name="joint_des_topic"       default="/robotiq3f/joint_des_cmd"/>
  <arg name="joint_command_topic"   default="/robotiq3f/joint_cmd"/>
  <!-- ================================================================================= -->
  <!-- Load parameters to ROS parameter server -->
  <group ns="$(arg hand_name)">
    <param name="compensate_gravity"    type="bool" value="true"/>
    <param name="joint_state_topic"     type="str"  value="$(arg joint_state_topic)"/>
    <param name="joint_des_topic"       type="str"  value="$(arg joint_des_topic)"/>
    <param name="joint_command_topic"   type="str"  value="$(arg joint_command_topic)"/>
    <param name="rate"                  type="int"  value="$(arg control_rate)"/>
  </group>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- <group if="$(arg attached)"> 
    <rosparam file="$(find robotiq_3f_control)/config/robotiq3f_control_attached.yaml" command="load"
        ns="$(arg robot_name)"/>

    <node name="robotiq3f_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="$(arg robot_name)" args="finger_1_joint_1_position_controller
                                                  palm_finger_1_joint_position_controller
                                                  finger_2_joint_1_position_controller
                                                  palm_finger_2_joint_position_controller
                                                  finger_middle_joint_1_position_controller"/>
  </group>

  <group unless="$(arg attached)"> 
    <rosparam file="$(find robotiq_3f_control)/config/robotiq3f_control.yaml" command="load"/>

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/robotiq3f" args="finger_1_joint_1_position_controller
                                                  palm_finger_1_joint_position_controller
                                                  finger_2_joint_1_position_controller
                                                  palm_finger_2_joint_position_controller
                                                  finger_middle_joint_1_position_controller"/>
  </group> -->

  <!-- <group if="$(arg attached)"> 
        Split joint commands to publish to individual joint effort controllers
      <node name="robotiq3f_joint_wrapper" pkg="panda_gazebo" type="robot_joint_wrapper.py"
      respawn="false" output="screen">
        <param name="listen_prefix"       type="str" value="$(arg hand_name)"/>
        <param name="publish_prefix"      type="str" value="$(arg robot_name)"/>
        <param name="control_method"      type="str" value="p"/>
        <param name="joint_command_topic" type="str" value="$(arg joint_command_topic)"/>
        <param name="control_rate"        type="int" value="$(arg control_rate)"/>
      </node>
  </group> -->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!-- Only needed if hand is not attached -->
  <!-- <group unless="$(arg attached)"> 
    <node name="robotiq_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="true" output="screen">
        <remap from="/joint_states" to="/robotiq3f/joint_states" />
    </node>
  </group> -->
  
  <group if="$(arg attached)"> 
    <node name="robotiq_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="true" output="screen">
        <remap from="/joint_states" to="/robotiq3f/joint_states" />
    </node>
  </group>


</launch>


